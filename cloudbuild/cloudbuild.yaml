steps:
      - id: Set default Environment Variables
        name: "bash"
        args:
        - -c
        - |
          export BYPASS_REPOSCAN=0 &&
          export BYPASS_OSS_LICENSE=0 &&
          export BYPASS_IMAGESCAN=0 &&
          export BYPASS_WF=0 &&
          export BYPASS_SANDBOX=1 &&
          export TWISTCLI_PATH="/workspace"
          export WORK_DIR="/workspace"
          export REPO_URL="https://github.com/ivan-tresoldi/anthos-gke-hybrid-prismacloud" &&
          export LOCAL_REPO_DIR=${REPO_URL##*/} &&
          export K8S_CLUSTER="central" &&
          export CLUSTER_ZONE="us-central1-b" &&
          env > build_vars

      - id: Clone Code Repo to local Workspace
        name: 'gcr.io/cloud-builders/gcloud'
        entrypoint: "bash"
        args:
        - -c
        - |
          source build_vars &&
          git clone "$$REPO_URL" &&
          chmod +x $$LOCAL_REPO_DIR/files/*

      - id: Run Bridgecrew/Checkov IaC scanning
        name: 'bridgecrew/checkov:latest'
        entrypoint: /bin/bash
        args:
        - -c
        - |
          source build_vars &&
          checkov --bc-api-key $$BRIDGECREW_API_KEY --directory $$LOCAL_REPO_DIR --soft-fail
        secretEnv: ['BRIDGECREW_API_KEY']

      - id: twistcli download and store in workspace
        name: 'gcr.io/cloud-builders/gcloud'
        entrypoint: "bash"
        args:
        - -c
        - |
          source build_vars &&
          curl -s -k -u $$TL_USER:$$TL_PASS "$$TL_CONSOLE/api/v1/util/twistcli" -v -o $$TWISTCLI_PATH/twistcli;chmod +x $$TWISTCLI_PATH/twistcli
        secretEnv: ['TL_USER', 'TL_PASS', 'TL_CONSOLE']

      - id: Repo Vulnerability scan
        name: 'gcr.io/cloud-builders/gcloud'
        entrypoint: "bash"
        args:
        - -c
        - |
          source build_vars &&
          curl -s -k -u https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 -v -o ./jq;chmod +x ./jq &&
          $$LOCAL_REPO_DIR/files/repoScan.sh
        secretEnv: ['TL_USER', 'TL_PASS', 'TL_CONSOLE']

      - id: OSS License Check 
        name: 'gcr.io/cloud-builders/gcloud'
        entrypoint: "bash"
        args:
        - -c
        - |
          source build_vars &&
          $$LOCAL_REPO_DIR/files/licenseCheck.sh
        secretEnv: ['TL_USER', 'TL_PASS', 'TL_CONSOLE']

      - id: Apply security policies (Policy-as-Code) for evilpetclinic Application
        name: 'gcr.io/cloud-builders/gcloud'
        entrypoint: "bash"
        args:
        - -c
        - |
          source build_vars &&
          $$LOCAL_REPO_DIR/files/addPolicies.sh
        secretEnv: ['TL_USER', 'TL_PASS', 'TL_CONSOLE']

      - id: Scan Image for vulnerabilities
        name: 'gcr.io/cloud-builders/gcloud'
        entrypoint: "bash"
        args:
        - -c
        - |
          source build_vars &&
          $$LOCAL_REPO_DIR/files/scanImage.sh
        secretEnv: ['TL_USER', 'TL_PASS', 'TL_CONSOLE']
     
      - id: Scan Image for Malware using Wildfire
        name: 'gcr.io/cloud-builders/gcloud'
        entrypoint: "bash"
        args:
        - -c
        - |
          source build_vars &&
          $$LOCAL_REPO_DIR/files/malwareCheck.sh
        secretEnv: ['TL_USER', 'TL_PASS', 'TL_CONSOLE']

      - id: Sandbox Runtime Scanning of Image       
        name: 'gcr.io/cloud-builders/gcloud'
        entrypoint: "bash"
        args:
        - -c
        - |
          source build_vars &&
          $$LOCAL_REPO_DIR/files/sandboxscan.sh
        secretEnv: ['TL_USER', 'TL_PASS', 'TL_CONSOLE']
       
      - id: Deploy Application   
        name: 'gcr.io/cloud-builders/gcloud'
        entrypoint: "bash"
        args:
        - -c
        - |
          source build_vars &&
          gcloud container clusters get-credentials $$K8S_CLUSTER= --zone $$CLUSTER_ZONE --project $$PROJECT_ID &&
          $$LOCAL_REPO_DIR/files/deploy.sh
        secretEnv: ['TL_USER', 'TL_PASS', 'TL_CONSOLE']
       
      - id: Execute Runtime attacks 
        name: 'gcr.io/cloud-builders/gcloud'
        entrypoint: "bash"
        args:
        - -c
        - |
          source build_vars &&
          gcloud container clusters get-credentials $$K8S_CLUSTER= --zone $$CLUSTER_ZONE --project $$PROJECT_ID &&
          $$LOCAL_REPO_DIR/files/runtime_attacks.sh
        secretEnv: ['TL_USER', 'TL_PASS', 'TL_CONSOLE']
         
      - id: Execute WAAS attacks 
        name: 'gcr.io/cloud-builders/gcloud'
        entrypoint: "bash"
        args:
        - -c
        - |
          source build_vars &&
          gcloud container clusters get-credentials $$K8S_CLUSTER= --zone $$CLUSTER_ZONE --project $$PROJECT_ID &&
          $$LOCAL_REPO_DIR/files/waas_attacks.sh
        secretEnv: ['TL_USER', 'TL_PASS', 'TL_CONSOLE']

availableSecrets:
  secretManager:
  - versionName: projects/pcc-dev-sandbox/secrets/TL_USER/versions/latest
    env: TL_USER
  - versionName: projects/pcc-dev-sandbox/secrets/TL_PASS/versions/latest
    env: TL_PASS
  - versionName: projects/pcc-dev-sandbox/secrets/TL_CONSOLE/versions/latest
    env: TL_CONSOLE
  - versionName: projects/pcc-dev-sandbox/secrets/BRIDGECREW_API_KEY/versions/latest
    env: BRIDGECREW_API_KEY
