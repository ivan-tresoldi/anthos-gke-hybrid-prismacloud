options:
  env:
  - BYPASS_REPOSCAN=0
  - BYPASS_OSS_LICENSE=0
  - BYPASS_IMAGESCAN=1
  - BYPASS_WF=0
  - BYPASS_SANDBOX=0
  - CLOUDSDK_CONTAINER_CLUSTER="central"
  - CLOUDSDK_COMPUTE_ZONE="us-central1-b"

availableSecrets:
  secretManager:
  - versionName: projects/pcc-dev-sandbox/secrets/TL_USER/versions/latest
    env: TL_USER
  - versionName: projects/pcc-dev-sandbox/secrets/TL_PASS/versions/latest
    env: TL_PASS
  - versionName: projects/pcc-dev-sandbox/secrets/TL_CONSOLE/versions/latest
    env: TL_CONSOLE
  - versionName: projects/pcc-dev-sandbox/secrets/BRIDGECREW_API_KEY/versions/latest
    env: BRIDGECREW_API_KEY


steps:
      - id: Download twistcli
        name: 'gcr.io/cloud-builders/gcloud'
        entrypoint: "bash"
        args:
        - -c
        - |
          curl -s -k -u $$TL_USER:$$TL_PASS "$$TL_CONSOLE/api/v1/util/twistcli" -v -o twistcli;chmod +x twistcli
        secretEnv: ['TL_USER', 'TL_PASS', 'TL_CONSOLE']

      - id: Run Bridgecrew/Checkov IaC scanning
        name: 'bridgecrew/checkov:latest'
        entrypoint: /bin/bash
        args:
        - -c
        - |
          checkov --bc-api-key $$BRIDGECREW_API_KEY --directory /workspace --soft-fail
        secretEnv: ['BRIDGECREW_API_KEY']

      - id: Repo Vulnerability scan
        name: "ubuntu"
        entrypoint: "bash"
        args:
        - -c
        - |
          apt-get update -y;apt-get install -y jq curl &&
          chmod +x /workspace/files/* &&
          /workspace/files/repoScan.sh
        secretEnv: ['TL_USER', 'TL_PASS', 'TL_CONSOLE']

      - id: OSS License Check 
        name: 'ubuntu'
        entrypoint: "bash"
        args:
        - -c
        - |
          apt-get update -y;apt-get install -y jq curl &&
          /workspace/files/licenseCheck.sh
        secretEnv: ['TL_USER', 'TL_PASS', 'TL_CONSOLE']

      - id: Apply security policies (Policy-as-Code) for evilpetclinic Application
        name: 'gcr.io/cloud-builders/curl'
        entrypoint: "bash"
        args: ['/workspace/files/addPolicies.sh']
        secretEnv: ['TL_USER', 'TL_PASS', 'TL_CONSOLE']

      - id: Scan Image for Vulnerabilities
        name: 'gcr.io/cloud-builders/docker'
        entrypoint: "bash"
        args:
        - -c
        - |
          apt-get update -y;apt-get install -y jq curl &&
          docker pull itresoldi/evilpetclinic:latest &&
          /workspace/files/scanImage.sh
        secretEnv: ['TL_USER', 'TL_PASS', 'TL_CONSOLE']
     
      - id: Scan Image for Malware using Wildfire
        name: 'gcr.io/cloud-builders/docker'
        entrypoint: "bash"
        args:
        - -c
        - |
          apt-get update -y;apt-get install -y jq curl &&
          docker pull itresoldi/evilpetclinic:latest &&
          /workspace/files/malwareCheck.sh
        secretEnv: ['TL_USER', 'TL_PASS', 'TL_CONSOLE']

      - id: Sandbox Runtime Scanning of Image       
        name: 'gcr.io/cloud-builders/docker'
        entrypoint: "bash"
        args:
        - -c
        - |
          apt-get update -y;apt-get install -y jq curl docker-ce docker-ce-cli containerd.io &&
          docker pull itresoldi/evilpetclinic:latest &&
          /workspace/files/sandboxscan.sh
        secretEnv: ['TL_USER', 'TL_PASS', 'TL_CONSOLE']
       
      - id: Deploy Application 
        name: 'gcr.io/cloud-builders/kubectl'
        args:
        - 'apply'
        - '-f'
        - '/workspace/k8s/deploy.yml'
        env:
        - 'CLOUDSDK_COMPUTE_ZONE=us-central1-b'
        - 'CLOUDSDK_CONTAINER_CLUSTER=central'

      - id: Execute Runtime attacks 
        name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
        entrypoint: "bash"
        args: ['/workspace/files/runtime_attacks.sh']
        env:
        - 'CLOUDSDK_COMPUTE_ZONE=us-central1-b'
        - 'CLOUDSDK_CONTAINER_CLUSTER=central'

      - id: Execute WAAS attacks 
        name: 'gcr.io/cloud-builders/kubectl'
        entrypoint: "bash"
        args: ['/workspace/files/waas_attacks.sh']
        env:
        - 'CLOUDSDK_COMPUTE_ZONE=us-central1-b'
        - 'CLOUDSDK_CONTAINER_CLUSTER=central'